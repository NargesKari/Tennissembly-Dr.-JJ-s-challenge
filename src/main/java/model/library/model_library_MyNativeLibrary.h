/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class model_library_MyNativeLibrary */

#ifndef _Included_model_library_MyNativeLibrary
#define _Included_model_library_MyNativeLibrary
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     model_library_MyNativeLibrary
 * Method:    updateTrailValues
 * Signature: ([DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_model_library_MyNativeLibrary_updateTrailValues
  (JNIEnv *, jclass, jdoubleArray, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    calculateParabola
 * Signature: (DDDDD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_model_library_MyNativeLibrary_calculateParabola
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    divRoundAwayFromZero
 * Signature: (DD)I
 */
JNIEXPORT jint JNICALL Java_model_library_MyNativeLibrary_divRoundAwayFromZero
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    asmAbs
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_model_library_MyNativeLibrary_asmAbs
  (JNIEnv *, jclass, jint);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    sin
 * Signature: (DDDD)D
 */
JNIEXPORT jdouble JNICALL Java_model_library_MyNativeLibrary_sin
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    isBetween
 * Signature: (DDD)Z
 */
JNIEXPORT jboolean JNICALL Java_model_library_MyNativeLibrary_isBetween
  (JNIEnv *, jclass, jdouble, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    makeInBound
 * Signature: (DDD)D
 */
JNIEXPORT jdouble JNICALL Java_model_library_MyNativeLibrary_makeInBound
  (JNIEnv *, jclass, jdouble, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    myHypot
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_model_library_MyNativeLibrary_myHypot
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    makeRandomMovement
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_model_library_MyNativeLibrary_makeRandomMovement
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     model_library_MyNativeLibrary
 * Method:    isKeyPressed
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_model_library_MyNativeLibrary_isKeyPressed
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
